#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&kakko INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        kakko: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_MUHENKAN &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "TO_LAYER_0";
        };

        pass: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp E &kp N &kp T &kp O &kp N0 &kp NUMBER_1 &kp NUMBER_3 &kp N0 &kp ENTER>;
            label = "NEW_MACRO";
        };

        kagikakko: kagikakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "KAGIKAKKO";
        };

        mojipeast: mojipeast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_ALT &kp RCTRL &kp V>,
                <&macro_wait_time 100>,
                <&kp V>,
                <&macro_wait_time 100>,
                <&kp ENTER>,
                <&macro_wait_time 100>,
                <&kp ESC>;

            label = "MOJIPEAST";
        };

        mailtenpu: mailtenpu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp F>;
            label = "MAILTENPU";
        };

        wintab: wintab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_WIN &kp TAB>;
            label = "WINTAB";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&kakko>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W             &kp E           &kp R           &kp T                                                      &kp Y                &kp U  &kp I      &kp O      &kp P
&lt 2 A           &kp S             &kp D           &mt LEFT_WIN F  &kp G               &kp LS(LG(S))      &kp MINUS           &kp H                &kp J  &kp K      &kp L      &mt LC(LSHFT) SEMICOLON
&mt LEFT_SHIFT Z  &kp X             &kp C           &kp V           &kp B               &kagikakko         &kakko              &kp N                &kp M  &mkp LCLK  &mkp RCLK  &lt 3 COMMA
&kp ESC           &kp INT_MUHENKAN  &kp INT_HENKAN  &lt 1 ENTER     &mt LEFT_WIN SPACE  &lt 3 DELETE       &mt LEFT_ALT ENTER  &mt RCTRL BACKSPACE                               &kp PERIOD
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        FUNCTION {
            bindings = <
&kp LC(X)  &kp LC(A)   &kp LA(N7)        &kp LA(N8)        &kp LA(N9)                                         &kp F7  &kp F8  &kp F9  &kp LS(EXCLAMATION)  &kp AT_SIGN
&kp LC(C)  &mojipeast  &kp LA(NUMBER_4)  &kp LA(N5)        &kp LA(N6)        &trans         &kp LESS_THAN     &kp F4  &kp F5  &kp F6  &kp LEFT_BRACKET     &kp RIGHT_BRACKET
&kp LC(V)  &mailtenpu  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &kp TILDE      &kp GREATER_THAN  &kp F1  &kp F2  &kp F3  &kp COLON            &kp LS(QUESTION)
&trans     &trans      &wintab           &trans            &trans            &trans         &trans            &trans                                       &kp SQT
            >;
        };

        NUM {
            bindings = <
&kp LCTRL  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS                                                &kp PAGE_UP       &kp HOME         &kp UP          &kp END            &trans
&trans     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp PAGE_DOWN     &kp LEFT         &kp DOWN_ARROW  &kp RIGHT          &trans
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0     &kp SLASH                    &kp SLASH       &kp LEFT_BRACKET  &kp LC(PAGE_UP)  &kp LEFT_BRACE  &kp LC(PAGE_DOWN)  &trans
&trans     &kp EQUAL     &kp ASTERISK  &trans        &trans     &kp RA(LS(F4))               &trans          &trans                                                                &trans
            >;
        };

        ARROW {
            bindings = <
&kp LG(L)         &kp LG(NUMBER_1)  &kp LS(LC(N7))        &kp LC(LS(NUMBER_8))  &kp LS(LC(N9))                               &kp LA(RIGHT)  &trans  &trans  &kp AT_SIGN  &kp DOUBLE_QUOTES
&kp RS(CAPSLOCK)  &kp LG(NUMBER_2)  &kp LS(LC(NUMBER_4))  &kp LS(LC(N5))        &kp LS(LC(N6))        &trans      &trans     &kp LA(LEFT)   &trans  &trans  &kp SQT      &kp COLON
&pass             &kp LG(NUMBER_3)  &kp LS(LC(NUMBER_1))  &kp LS(LC(N2))        &kp LS(LC(NUMBER_3))  &trans      &trans     &trans         &trans  &trans  &trans       &kp TILDE
&kp LG(NUMBER_4)  &kp LG(NUMBER_5)  &kp LG(NUMBER_6)      &trans                &trans                &trans      &kp LC(W)  &kp LC(TAB)                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
